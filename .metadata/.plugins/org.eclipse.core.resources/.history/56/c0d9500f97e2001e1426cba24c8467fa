package com.ssafy.fit.model.controller;

import java.io.IOException;
import java.util.List;

import com.ssafy.fit.model.dto.Review;
import com.ssafy.fit.model.service.ReviewService;
import com.ssafy.fit.model.service.ReviewServiceImpl;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet("/")
public class MainController extends HttpServlet {

	private static final long serialVersionUID = 1L;
	// 의존성 주입 (필드주입)
	private ReviewService service = ReviewServiceImpl.getInstance();

	@Override
	protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 모든 board요청은 해당 서블릿으로 오게 되어 있음
		String action = request.getParameter("action");

		switch (action) {

		case "writeform":
			doWriteForm(request, response);
			break;

		case "write":
			doWrite(request, response);
			break;

		case "list":
			doList(request, response);
			break;

		case "detail":
			doDetail(request, response);
			break;

		case "delete":
			doRemove(request, response);
			break;

		case "updateform":
			doUpdateForm(request, response);
			break;

		case "update":
			doUpdate(request, response);
			break;
		}

	}

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	    List<Review> reviews = service.getList(); 
	    request.setAttribute("reviews", reviews); 
	    RequestDispatcher dispatcher = request.getRequestDispatcher("review.jsp"); 
	    dispatcher.forward(request, response);
	}



	private void doUpdate(HttpServletRequest request, HttpServletResponse response)
	        throws ServletException, IOException {
	    // 요청으로부터 리뷰 ID, 제목, 내용, 작성자 정보를 받아옵니다.
	    int id = Integer.parseInt(request.getParameter("id"));
	    String title = request.getParameter("title");
	    String content = request.getParameter("content");
	    // String author = request.getParameter("author"); // 작성자는 수정하지 않을 경우

	    // ID를 기반으로 리뷰 객체를 조회 후, 정보를 업데이트 합니다.
	    Review review = service.getReview(id); // getReview 메소드는 해당 ID의 리뷰 객체를 반환
	    review.setTitle(title);
	    review.setContent(content);
	    // review.setAuthor(author); // 작성자는 수정하지 않을 경우

	    // 수정된 리뷰 객체를 서비스를 통해 저장합니다.
	    service.updateReview(review);

	    // 수정 후 리뷰 목록 페이지로 리다이렉트 합니다.
	    response.sendRedirect("review?action=list");
	}



	private void doUpdateForm(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("id"));
		Review review = service.getBoard(id);
		request.setAttribute("board", review);
		request.getRequestDispatcher("/board/updateform.jsp").forward(request, response);
	}

	private void doRemove(HttpServletRequest request, HttpServletResponse response)
	        throws ServletException, IOException {
	    // 요청으로부터 리뷰 ID를 받아옵니다.
	    int id = Integer.parseInt(request.getParameter("id"));

	    // 서비스를 통해 해당 리뷰를 삭제합니다.
	    service.removeReview(id); // removeReview 메소드는 해당 ID의 리뷰를 삭제

	    // 삭제 후 리뷰 목록 페이지로 리다이렉트 합니다.
	    response.sendRedirect("review?action=list");
	}



	private void doDetail(HttpServletRequest request, HttpServletResponse response)
	        throws ServletException, IOException {
	    int id = Integer.parseInt(request.getParameter("id")); 
	    Review review = service.getBoard(id); 
	    request.setAttribute("review", review); 	
	    request.getRequestDispatcher("/detail.jsp").forward(request, response); 
	}


	private void doList(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	    List<Review> reviews = service.getList(); 
	    request.setAttribute("reviews", reviews); 
	    RequestDispatcher dispatcher = request.getRequestDispatcher("review.jsp"); 
	    dispatcher.forward(request, response);
	}


	private void doWrite(HttpServletRequest request, HttpServletResponse response) throws IOException {

	    String title = request.getParameter("title");
	    String content = request.getParameter("content");
	    String author = request.getParameter("author"); 

	    Review review = new Review(title, author, content);

	    service.writeBoard(review);

	    // 저장 후 리뷰 목록 페이지로 리다이렉트
	    response.sendRedirect(request.getContextPath() + "/review?action=list");
	}



	private void doWriteForm(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.getRequestDispatcher("/board/writeform.jsp").forward(request, response);
	}

}
